<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/admin**" access="hasRole('admtest')" />
    </http>
 
    <beans:bean id="passwordEncoder" class="hr.igord.security.PasswordEncoderImpl" />
    <beans:bean id="userDetailsServiceImpl" class="hr.igord.security.UserDetailsServiceImpl" />
 
    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsServiceImpl">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>
    
    <!-- FAIL, see the wmssecurity02sql.sql comments -->
    <!-- {CALL ip_info_on_healthy_update(?, ?, ?, ?, ?)} -->
    <!--<authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder" />
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
		    "{CALL users_select_by_username(?)}"
                               authorities-by-username-query=
		    "{CALL user_roles_select_by_username(?)}" />
        </authentication-provider>
    </authentication-manager>-->
 
</beans:beans>